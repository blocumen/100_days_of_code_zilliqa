library Blocumen
let zero = Int32 0
let one = Int32 1
type Question =
  | Question of String ByStr20


contract ZilliqaGlobalCheck(boss: ByStr20)
(* Mutable var *)
field currentQuestionId : Int32 = Int32 0
field desc: String = ""
(* Map *)
field questionMapping: Map Int32 Question = Emp Int32 Question
(* final output -> Map of question ID to answer *)
field finalOutput: Map Int32 String = Emp Int32 String
(* to store the answer given by Individual user *)
field userVsAnswer: Map ByStr20 String = Emp ByStr20 String


(* Transition *)
transition addQuestion(desc: String )
accept;
get_current_qID <- currentQuestionId;
result = builtin add get_current_qID one;
currentQuestionId := result;
qID_Updated <- currentQuestionId;
(* type question ADT*)
question_details = Question desc _sender;
questionMapping[qID_Updated] := question_details;
result <- questionMapping[qID_Updated];
eventquestionmapping = { _eventname: "add Transition"; result: result; sender: _sender };
event eventquestionmapping
end

(* all acceps qID *)
transition resultDeclartion(qstnID: Int32)

end


transition userAnswer(qstnID: Int32)

end


transition redeem(qstnID: Int32)


end